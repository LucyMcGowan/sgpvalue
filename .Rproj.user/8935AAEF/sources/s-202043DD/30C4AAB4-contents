#Power as a function of the thetaernative
alpha = 0.05

pwr.alt <- function(n,V=1,theta0=0,delta.vec=c(0,0,0,0),truth='null',id.color=rgb(1,0.9,1,0.6)){
  #delta.vec = 4 delta values, theta = null, thetaernative, inconclusive
  theta=seq(-3,3,0.001)
  delta=delta.vec[1]
  p.no.theta.0 = pnorm(sqrt(n)*(theta0-delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))+ pnorm(-sqrt(n)*(theta0+delta)/sqrt(V)+sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))

  delta=delta.vec[2]
  p.no.theta.1 = pnorm(sqrt(n)*(theta0-delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))+ pnorm(-sqrt(n)*(theta0+delta)/sqrt(V)+sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))

  delta=delta.vec[3]
  p.no.theta.2 = pnorm(sqrt(n)*(theta0-delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))+ pnorm(-sqrt(n)*(theta0+delta)/sqrt(V)+sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))

  delta=delta.vec[4]
  p.no.theta.3 = pnorm(sqrt(n)*(theta0-delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))+ pnorm(-sqrt(n)*(theta0+delta)/sqrt(V)+sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))

  delta=delta.vec[1]
  p.all.0 = pnorm(sqrt(n)*(theta0+delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))-pnorm(sqrt(n)*(theta0-delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)+qnorm(1-alpha/2))

  if (delta <= qnorm(1-alpha/2) *sqrt(V/n)) p.all.0=rep(0,length(theta))

  delta=delta.vec[2]
  p.all.1 = pnorm(sqrt(n)*(theta0+delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))-pnorm(sqrt(n)*(theta0-delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)+qnorm(1-alpha/2))

  if (delta <= qnorm(1-alpha/2) *sqrt(V/n)) p.all.1=rep(0,length(theta))

  delta=delta.vec[3]
  p.all.2 = pnorm(sqrt(n)*(theta0+delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))-pnorm(sqrt(n)*(theta0-delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)+qnorm(1-alpha/2))

  if (delta <= qnorm(1-alpha/2) *sqrt(V/n)) p.all.2=rep(0,length(theta))

  delta=delta.vec[4]
  p.all.3 = pnorm(sqrt(n)*(theta0+delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)-qnorm(1-alpha/2))-pnorm(sqrt(n)*(theta0-delta)/sqrt(V)-sqrt(n)*theta/sqrt(V)+qnorm(1-alpha/2))

  if (delta <= qnorm(1-alpha/2) *sqrt(V/n)) p.all.3=rep(0,length(theta))

  pweak.0=1-p.no.theta.0-p.all.0
  pweak.1=1-p.no.theta.1-p.all.1
  pweak.2=1-p.no.theta.2-p.all.2
  pweak.3=1-p.no.theta.3-p.all.3
  if (truth =='null'){

    plot(theta,p.no.theta.0,type="n",ylim=c(0,1),
         xlab="Alternative (SD units)",ylab="Probability")
    lines(theta,p.no.theta.0,lty=1,lwd=1,col="black")
    lines(theta,p.no.theta.1,lty=1,lwd=1,col="orange")
    lines(theta,p.no.theta.2,lty=1,lwd=1,col="green")
    lines(theta,p.no.theta.3,lty=1,lwd=1,col="blue")
    abline(h=alpha,lwd=0.5,lty=2)

  }
  if (truth=='alternative') {

    plot(theta,p.all.0,type="n",ylim=c(0,1),
         xlab="Alternative (SD units)",ylab="Probability")
    lines(theta,p.all.0,lty=1,lwd=1,col="black")
    lines(theta,p.all.1,lty=1,lwd=1,col="orange")
    lines(theta,p.all.2,lty=1,lwd=1,col="green")
    lines(theta,p.all.3,lty=1,lwd=1,col="blue")
  }


  if (truth == "inconclusive"){
    par(yaxs="i")
    plot(theta,pweak.0,type="n",ylim=c(0,4),xlim=c(-2,2),
         xlab="Alternative (SD units)",ylab="Probability",yaxt="n")
    axis(2, at = seq(0,4,by=.25),label=c(0,rep(c("",.5,"", 0),4)),las=2)

    rect(-delta.vec[1],4,delta.vec[1],3,col=id.color,border=F)
    rect(-delta.vec[2],3,delta.vec[2],2,col=id.color,border=F)
    rect(-delta.vec[3],2,delta.vec[3],1,col=id.color,border=F)
    rect(-delta.vec[4],1,delta.vec[4],0,col=id.color,border=F)

    ## old color was  col=rgb(1,0,0,.2)

    abline(h=0,lty=2,lwd=0.5)
    abline(h=1,lty=2,lwd=0.5)
    abline(h=2,lty=2,lwd=0.5)
    abline(h=3,lty=2,lwd=0.5)
    abline(h=4,lty=2,lwd=0.5)

    lines(theta,pweak.0+3,lty=1,lwd=1,col="black")
    lines(theta,pweak.1+2,lty=1,lwd=1,col="orange")
    lines(theta,pweak.2+1,lty=1,lwd=1,col="green")
    lines(theta,pweak.3,lty=1,lwd=1,col="blue")

    #lines(rep(delta.vec[1],2),c(3,4),lwd=0.5,lty=2)
    #lines(rep(-delta.vec[1],2),c(3,4),lwd=0.5,lty=2)
    #lines(rep(delta.vec[2],2),c(2,3),lwd=0.5,lty=2)
    #lines(rep(-delta.vec[2],2),c(2,3),lwd=0.5,lty=2)
    #lines(rep(delta.vec[3],2),c(1,2),lwd=0.5,lty=2)
    #lines(rep(-delta.vec[3],2),c(1,2),lwd=0.5,lty=2)
    #lines(rep(delta.vec[4],2),c(0,1),lwd=0.5,lty=2)
    #lines(rep(-delta.vec[4],2),c(0,1),lwd=0.5,lty=2)

    text(1.6,3.5,bquote(delta~"="~.(delta.vec[1])))
    text(1.6,2.5,bquote(delta~"="~.(round(delta.vec[2],2))))
    text(1.6,1.5,bquote(delta~"="~.(delta.vec[3])))
    text(1.6,0.5,bquote(delta~"="~.(delta.vec[4])))

  }
}
